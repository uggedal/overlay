From 16fbced1f92efe6004349fe165cc97225ecccdc5 Mon Sep 17 00:00:00 2001
From: Hugo Osvaldo Barrera <hugo@barrera.io>
Date: Sat, 14 Mar 2020 09:50:54 +0100
Subject: [PATCH] Include a systemd.service file
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Including (and installing) these changes triggers calls to
`org.freedesktop.Notifications` to start a systemd user service with
mako.

This is pretty much how similar daemons (eg: dunst) behave. It allows
the service to be auto-started on demand, and also ties it to the
graphical session.

This also makes is trivial to restart `mako` like any other user service,
by just running `systemd --user restart mako`.

Users not running systemd (if that's supported) shouldn't be affected.

Co-authored-by: Дамјан Георгиевски <gdamjan@gmail.com>
---
 contrib/systemd/mako.service.in | 15 +++++++++++++++
 fr.emersion.mako.service.in     |  1 +
 meson.build                     | 13 +++++++++++++
 meson_options.txt               |  1 +
 4 files changed, 30 insertions(+)
 create mode 100644 contrib/systemd/mako.service.in

diff --git a/contrib/systemd/mako.service.in b/contrib/systemd/mako.service.in
new file mode 100644
index 0000000..cfeab7c
--- /dev/null
+++ b/contrib/systemd/mako.service.in
@@ -0,0 +1,15 @@
+[Unit]
+Description=Lightweight Wayland notification daemon
+Documentation=man:mako(1)
+PartOf=graphical-session.target
+After=graphical-session.target
+
+[Service]
+Type=dbus
+BusName=org.freedesktop.Notifications
+ExecCondition=/bin/sh -c '[ -n "$WAYLAND_DISPLAY" ]'
+ExecStart=@bindir@/mako
+ExecReload=@bindir@/makoctl reload
+
+[Install]
+WantedBy=graphical-session.target
diff --git a/fr.emersion.mako.service.in b/fr.emersion.mako.service.in
index db4bd8b..e60fda1 100644
--- a/fr.emersion.mako.service.in
+++ b/fr.emersion.mako.service.in
@@ -1,3 +1,4 @@
 [D-BUS Service]
 Name=org.freedesktop.Notifications
 Exec=@bindir@/mako
+SystemdService=mako.service
diff --git a/meson.build b/meson.build
index 67ecd4a..1cd034a 100644
--- a/meson.build
+++ b/meson.build
@@ -102,6 +102,19 @@ configure_file(
 	install_dir: datadir + '/dbus-1/services',
 )
 
+systemd = dependency('systemd', required: get_option('systemd'))
+
+if systemd.found()
+  user_units_dir = systemd.get_pkgconfig_variable('systemduserunitdir')
+
+  configure_file(
+    configuration: conf_data,
+    input: 'contrib/systemd/mako.service.in',
+    output: '@BASENAME@',
+    install_dir: user_units_dir
+  )
+endif
+
 scdoc = dependency('scdoc', required: get_option('man-pages'), version: '>= 1.9.7')
 
 if scdoc.found()
diff --git a/meson_options.txt b/meson_options.txt
index 37aae8b..0acb9c5 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -3,3 +3,4 @@ option('man-pages', type: 'feature', value: 'auto', description: 'Generate and i
 option('fish-completions', type: 'boolean', value: false, description: 'Install fish completions')
 option('zsh-completions', type: 'boolean', value: false, description: 'Install zsh completions')
 option('apparmor', type: 'boolean', value: 'false', description: 'Install AppArmor profile')
+option('systemd', type: 'feature', value: 'auto', description: 'Install systemd user service unit')
