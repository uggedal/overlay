#!/bin/sh -e

[ "$(id -u)" -eq 0 ] || { echo needs root; exit 1; }

DIR=$(readlink -f $(dirname $0))

MIRROR=mirror.netcologne.de/gentoo

ROOTFS=$DIR/rootfs
DISTDIR=$DIR/distfiles
PKGDIR=$DIR/packages
MOUNTS='dev proc sys usr/portage'

rootfs() {
	local p=-nomultilib
	local a=amd64
	local d=releases/$a/autobuilds

	if ! [ -d $ROOTFS/etc ]; then
		mkdir -p $ROOTFS
		local t=$(curl -s http://$MIRROR/$d/latest-stage3-$a$p.txt |
			awk 'END {print $1 }')
		curl http://$MIRROR/$d/$t |
			tar -C $ROOTFS -xjp --xattrs
	fi

	mkdir -p $DISTDIR $PKGDIR
}

mnt() {
	local d

	for d in $MOUNTS usr/local/portage; do
		[ -d $ROOTFS/$d ] || mkdir -p $ROOTFS/$d
	done

	for d in $MOUNTS; do
		grep -q $ROOTFS/$d /proc/mounts ||
			mount -o rbind,ro /$d $ROOTFS/$d
	done

	grep -q $ROOTFS/usr/local/portage /proc/mounts ||
		mount -o rbind $(readlink -f $DIR/..) $ROOTFS/usr/local/portage
}

conf() {
	mkdir -p $ROOTFS/etc/portage/repos.conf
	cat <<-EOF >$ROOTFS/etc/portage/repos.conf/uggedal.conf
	[uggedal]
	location = /usr/local/portage
	masters = gentoo
	auto-sync = no
	EOF

	cat <<-EOF >$ROOTFS/etc/portage/make.conf
	USE=""
	MAKEOPTS="--jobs=4 --load-average=4.0"
	EMERGE_DEFAULT_OPTS="--jobs=4 --load-average=4.0"
	GENTOO_MIRRORS="http://$MIRROR/"
	FEATURES="buildpkg"
	DISTDIR="/usr/local/portage/build/distfiles"
	PKGDIR="/usr/local/portage/build/packages"
	EOF

	rm -f $ROOTFS/etc/portage/make.profile
	ln -s ../../usr/local/portage/profiles/uggedal/amd64/generic \
		$ROOTFS/etc/portage/make.profile

	cp /etc/resolv.conf $ROOTFS/etc/
}

world() {
	cp $DIR/world $ROOTFS/var/lib/portage/world
}

prepare() {
	chroot $ROOTFS /usr/bin/eselect news read --quiet all
}

emerge() {
	local opts='
		--complete-graph=y
		--keep-going=y
		--with-bdeps=y
	'

	if ! [ -t 1 ]; then
		opts="
			$opts
			--color=n
			--nospinner
			--quiet=y
		"
	fi

	if [ "$FORCE" ]; then
		opts="$opts -e"
	else
		opts="$opts -uND"
	fi

	chroot $ROOTFS /usr/bin/emerge $opts "$@" @world
}

cleanup() {
	if [ "$NO_CLEANUP" ]; then
		return
	fi
	chroot $ROOTFS /usr/bin/emerge --depclean
}

umnt() {
	for d in $MOUNTS usr/local/portage; do
		if grep -q $ROOTFS/$d /proc/mounts; then
			umount -l  $ROOTFS/$d
		fi
	done
}

if [ "$1" = -f ]; then
	FORCE=y
	shift
fi

trap umnt INT TERM EXIT

rootfs
mnt
conf
world
prepare
emerge "$@"
cleanup
